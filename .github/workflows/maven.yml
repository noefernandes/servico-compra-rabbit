# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: project build and deploy

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Configure environment variables and build
      env:
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASS: ${{ secrets.DB_PASS }}
        DB_IP: ${{ secrets.DB_IP }}
        RABBIT_IP: ${{ secrets.RABBIT_IP }}
        RABBIT_USER: ${{ secrets.RABBIT_USER }}
        RABBIT_PASS: ${{ secrets.RABBIT_PASS }}
      run: mvn clean install -Dspring.data.mongodb.uri="mongodb://${DB_USER}:${DB_PASS}@${DB_IP}:27017/compras?authSource=admin" -Dspring.rabbitmq.host="${RABBIT_IP}" -Dspring.rabbitmq.port=5672 -Dspring.rabbitmq.username="${RABBIT_USER}" -Dspring.rabbitmq.password="${RABBIT_PASS}"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: my-app
        path: .

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: my-app

      - name: Run tests
        run: |
            mvn test

    needs: build

  upload:
    runs-on: ubuntu-latest

    steps:
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: noefernandes/servico-compra-rabbit
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    needs: [build, test]